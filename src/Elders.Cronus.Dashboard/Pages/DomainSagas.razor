@page "/domain-sagas"
@inject AppState App
@inject CronusClient Cronus
@inject IJSRuntime JSRuntime

<div class="mat-layout-grid">
    <h1>Sagas</h1>

    <MatTable Items="@Domain?.Sagas" PageLabel="dfjgh" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" SelectionChanged="SagaSelectionChangedEvent" class="mat-elevation-z5">
        <MatTableHeader>
            <th>Name</th>
            <th>ID</th>
        </MatTableHeader>
        <MatTableRow>
            <td>@context.Name</td>
            <td>@context.Id</td>
        </MatTableRow>
    </MatTable>
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
            <h2>@Saga?.Name Events</h2>
            <MatTable Items="@Saga?.Events" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" class="mat-elevation-z5">
                <MatTableHeader>
                    <th>Name</th>
                    <th>ID</th>
                </MatTableHeader>
                <MatTableRow>
                    <td>@context.Name</td>
                    <td><i>@context.Id</i></td>
                </MatTableRow>
            </MatTable>
        </div>
    </div>
</div>

@code {
    DomainDto Domain { get; set; }

    DomainSagaDto Saga { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Domain = await Cronus.GetDomainAsync(@App.Connection);
    }

    public void SagaSelectionChangedEvent(object row)
    {
        if (row != null)
        {
            Saga = (DomainSagaDto)row;
        }

        this.StateHasChanged();
    }
}
