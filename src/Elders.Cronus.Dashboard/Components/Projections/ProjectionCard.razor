@inject AppState App
@inject CronusClient Cronus

@if (Projection is null == false)
{
    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="text-left col-lg-8">
                    <ProjectionVersionBadge Version="@Projection.LatestVersion" LiveVersion="@Projection.LiveVersion"></ProjectionVersionBadge>
                    <span>@Projection.ProjectionName</span>
                    <div>
                        <span style="font-size:small"><cite>@Projection.ProjectionContractId</cite></span>
                    </div>
                </div>
                <div class="text-right col-lg-4">
                    <a href="/projections/@Projection.ProjectionContractId"><Icon Identifier="magnifying-glass"></Icon></a>
                    <IconButton Icon="loop-square" ToolTip="Rebuild" Click="@(async () => await RebuildAsync(Projection))"></IconButton>
                </div>
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public Projection Projection { get; set; }

    protected override Task OnInitializedAsync()
    {
        App.OnChange += StateHasChanged;

        return Task.CompletedTask;
    }

    public Task RebuildAsync(Projection projection)
    {
        return Cronus.RebuildAsync(App.Connection, Projection);
    }
}
